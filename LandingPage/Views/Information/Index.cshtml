@model PagedList.IPagedList<LandingPage.Models.Information>
@using PagedList.Mvc;
@using LandingPage.Models
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    var Iconsort = ViewBag.SortIcon;
    Layout = "~/Views/Shared_Admin/_Layout.cshtml";
}
<style>
    .padding {
        padding-top: 15px;
        padding-bottom: 8px;
    }
</style>
<div class="wrapper">
    <div class="row">
        <div class="col-sm-12">
            <section class="panel">
                <header class="panel-heading">
                    MP Language
                </header>
                <div class="panel-body">
                    @using (Html.BeginForm("Index", "Information", FormMethod.Get, new { @name = "search-form" }))
                    {

                        <input type="hidden" name="start" value="" />
                        <input type="hidden" name="end" value="" />


                        <div class="row">
                            <div class="col-lg-3 col-md-5">
                                <p class="padding">
                                    Tìm Theo Từ Khóa
                                </p>
                                <div class="input-group m-bot15">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="submit" style="height:34px"> Tìm <i class="fa fa-search"></i></button>

                                    </span>
                                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Tên...Email... " })

                                </div>
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <p class="padding">
                                    Tìm Theo Trạng Thái
                                </p>
                                @Html.DropDownList("status",
                             EnumHelper.GetSelectList(typeof(LandingPage.Models.Information.EnumStatus)),
                             "Select Status",
                             new { @class = "btn btn-default" })
                            </div>
                            <div class="col-lg-4 col-md-10">
                                <div class="pull-left">
                                    <p class="padding">
                                        Tìm Theo Thời Gian
                                    </p>
                                    <input type="text" name="daterange" value="" class="form-control fa fa-clock-o" />
                                </div>
                            </div>
                            
                        </div>

                    }
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, status = ViewBag.Status, searchString = ViewBag.CurrentFilter }))


                    @if (Model.Count == 0)
                    {
                        <div style="font-style:italic ; text-align:center ; font-size: 1.2em;" class="padding">
                            (NO RESULT IS FOUND)
                        </div>
                    }
                    <section>
                        <table class="table table-bordered table-striped table-condensed">
                            <tr>

                                <th>
                                    Người Gửi
                                </th>
                                <th>
                                    Email
                                </th>
                                <th>
                                    Phone
                                </th>
                                <th>
                                    Ghi Chú
                                </th>
                                <th>
                                    Trạng Thái
                                </th>

                                <th>
                                    @Html.ActionLink("Ngày Tạo", "Index", new { sortOrder = ViewBag.DateSort })
                                    <i class="@Iconsort" aria-hidden="true"></i>
                                </th>
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Phone)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Message)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreateAt)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                                    </td>
                                </tr>
                            }

                        </table>
                    </section>

                    <br />
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, status = ViewBag.Status, searchString = ViewBag.CurrentFilter }))
                </div>
            </section>
        </div>




    </div>


</div>

@section scripts{
    
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

    <script>
        var start = moment().subtract(29, 'days');
        var end = moment();
        var url_string = location.href;
        var url = new URL(url_string);
        // Cắt đoạn biến trong herf
        var initStart = url.searchParams.get("start");
        var initEnd = url.searchParams.get("end");
        var keyword = url.searchParams.get("keyword");
        var sortOrder = url.searchParams.get("sortOrder");
        if (initStart != null && moment(initStart, 'YYYY-MM-DD', true).isValid()) {
            // Gán biến cho start trong thẻ input
            start = initStart;
            $('input[name="start"]').val(start);
        }
        if (initEnd != null && moment(initEnd, 'YYYY-MM-DD', true).isValid()) {
            end = initEnd;
            $('input[name="end"]').val(end);
        }
        if (sortOrder != null) {
            $('input[name="sortOrder"]').val(keyword);
        }
        $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'YYYY-MM-DD'
            },
            ranges: {
                'Hôm Nay': [moment(), moment()],
                'Hôm Qua': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                '7 Ngày Trước': [moment().subtract(6, 'days'), moment()],
                '30 Ngày Trước': [moment().subtract(29, 'days'), moment()],
                'Tháng Này': [moment().startOf('month'), moment().endOf('month')],
                'Tháng Trước': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        });
        $('input[name="daterange"]').on('apply.daterangepicker',
            function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');
                $('input[name="start"]').val(startDate);
                $('input[name="end"]').val(endDate);
                $('form[name="search-form"]').submit();
            });
        $('select[name="status"]').change(function () {
            $('form[name="search-form"]').submit();
        });
        $('select[name="gender"]').change(function () {
            $('form[name="search-form"]').submit();
        });
    </script>
}
